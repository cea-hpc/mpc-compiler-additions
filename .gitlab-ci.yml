#Available stages to run in 'automatic' processing:
# For convenience, implicit stages have been made explicit here...
stages:
  - Initialization
  - Setup
  - No-priv
  - Privatization
  - Finalization

.run_by_main: &run_by_main
  only:
  - master
  - devel
  - pt_devel
  - merge_requests

.source_env: &source_env
  variables:
    PATH: "$HOME/GL_$CI_PIPELINE_ID/install/bin:$PATH"
    INCLUDE_PATH: "$HOME/GL_$CI_PIPELINE_ID/install/include:$INCLUDE_PATH"
    CPATH: "$HOME/GL_$CI_PIPELINE_ID/install/include:$CPATH"
    LD_LIBRARY_PATH: "$HOME/GL_$CI_PIPELINE_ID/install/lib:$HOME/GL_$CI_PIPELINE_ID/install/lib64:$LD_LIBRARY_PATH"

############################
##### EXTRA ACTIONS ########
############################
#these actions should herit from implicit stages ".pre" and ".post"

# pre-actions to cleanup the machine before the run
# this job will be run in ANY pipeline -> ensure to enable all proper tags
# CAUTION : Otherwise tag-specific runners won't allow to run the whole pipeline because
# both .pre and .post cannot be scheduled (thus, why not using user-defined pre and post
# to avoid them to be run systematically ?)
Env Sanitize:
  <<: *run_by_main
  stage: Initialization
  script:
    - mkdir -p $HOME/GL_$CI_PIPELINE_ID/{build,install,test}
    - echo "Environment Cleaned !"

# post-actions to cleanup the machine after the run
# The last line may not be necessary as a pipeline start run something like a "git clean" before running
# This implies a probable issue when multiple piplines are run concurrently on the same project :(
# Please read the CAUTION above !
Artifact Deletion:
  <<: *run_by_main
  stage: Finalization
  allow_failure: true
  when: on_success
  script:
    - $HOME/clean_old_pipelines.sh
    - rm -rf $HOME/$CI_PIPELINE_ID/

Resource Relinquishing:
  <<: *run_by_main
  stage: Finalization
  allow_failure: true
  when: always
  script:
  - scancel --name GL-build_$CI_PIPELINE_ID
  # Ugly, our way to kill allocations from tests
  - scancel -u $USER


############################
####### BUILD STAGE ########
############################

Build:
  <<: *run_by_main
  stage: Setup
  script:
  - ${CI_PROJECT_DIR}/autogen.sh
  - cd $HOME/GL_$CI_PIPELINE_ID/build
  - srun -J GL-build_$CI_PIPELINE_ID -N 1 -c 8 ${CI_PROJECT_DIR}/autopriv_deploy.sh -i $HOME/GL_$CI_PIPELINE_ID/install -j8 -j /dev/shm/autopriv

Base tests:
  <<: *run_by_main
  stage: No-priv
  script:
        - make check -C tests/nopriv VERBOSE=1

Priv tests:
  <<: *run_by_main
  stage: Privatization
  script:
        - make check -C tests/priv VERBOSE=1

